apiVersion: skaffold/v3
kind: Config
metadata:
  name: aka-api
build:
  tagPolicy:
    sha256: {}
  artifacts:
    - image: dev.local/aka/aka-api
      ko:
        fromImage: harbor.dcas.dev/gcr.io/distroless/static:nonroot
        main: ./cmd/jmp/
        env:
          - GOPROXY=https://prism.v2.dcas.dev/api/go
        dependencies:
          paths:
            - cmd/jmp/
            - pkg/
            - internal/
            - go.mod
            - go.sum
    - image: dev.local/aka/oidc-proxy
      context: ../oidc-proxy
      ko:
        fromImage: harbor.dcas.dev/gcr.io/distroless/static:nonroot
        main: ./cmd/oidc-proxy/
        env:
          - GOPROXY=https://prism.v2.dcas.dev/api/go
        dependencies:
          paths:
            - cmd/oidc-proxy/
            - internal/
            - go.mod
            - go.sum
  local:
    push: false
manifests:
  kustomize:
    paths:
      - deployments/
deploy:
  kubeContext: minikube
  kubectl:
    defaultNamespace: aka
  helm:
    releases:
      - name: postgresql
        remoteChart: https://charts.bitnami.com/bitnami/postgresql-16.0.1.tgz
        valuesFiles:
          - deployments/postgresql.yaml
        namespace: aka
        wait: true
      - name: aka
        chartPath: ../charts/aka
        valuesFiles:
          - deployments/values.yaml
        setValueTemplates:
          api.image.registry: "{{ .IMAGE_DOMAIN_dev_local_aka_aka_api }}"
          api.image.repository: "{{ .IMAGE_REPO_NO_DOMAIN_dev_local_aka_aka_api }}"
          api.image.tag: "{{ .IMAGE_TAG_dev_local_aka_aka_api }}"
          oauth2proxy.image.registry: "{{ .IMAGE_DOMAIN_dev_local_aka_oidc_proxy }}"
          oauth2proxy.image.repository: "{{ .IMAGE_REPO_NO_DOMAIN_dev_local_aka_oidc_proxy }}"
          oauth2proxy.image.tag: "{{ .IMAGE_TAG_dev_local_aka_oidc_proxy }}"
        namespace: aka
        skipBuildDependencies: true
